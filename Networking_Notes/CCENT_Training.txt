######################## Section 4 OSI Model ########################
OSI Model uses layers so that different machines are still compatible e.g. A HP windows machine can connect to a CentOS server with no issues 

All People Sleeping Through Networking Dont Pass   (Jingle to remember OSI Layers)
Layers:
	Layer 1 - Physical
	Layer 2 - Datalink
	Layer 3 - Network
	Layer 4 - Transport 
	Layer 5 - Session
	Layer 6 - Presentation
	Layer 7 - Application
	
Advantages of using the OSI Model:
	- Standard and Inoperability
	- Split Development. e.g. I don't need to understand networking to develop a website
	
Developer Layers: 		5, 6, 7
Network Eng. Layers: 	1, 2, 3, 4

Layer 7 - Application Layer:
	* The Application Layer is the layer dealing with application protocols such as FTP, Telnet, HTTP
	* e.g. Microsoft Outlook uses protocols such as IMAP, POP3, and SMTP
	
Layer 6 - Presentation Layer:
	* Data Representation / Syntax
		= ensures data is receivable by receiving system
		= formats data to be presented to the application layer 
		= structures data
		= negotiates data transfer syntax for application layer 

Layer 5 - Session Layer:
	* Interhost Communication
		= establishment, maintenance, and termination of sessions between applications 
		= two application processes on different machines can establish a session 
		
Layer 4 - Transport Layer:
	* End to End Connections
		= message segmentation
			@ splits message into smaller parts to be transported
		= handles transportation issues between hosts
		= ensures data transport reliability
		= establishes, maintains, and terminates virtual circuits 
	* TCP (Transmission Control Protocol)
		= if packet is missing, packet is retransmitted
		= Flow Control 
			@ manage data transmission
			@ Ensures the transmitting device does not send more data than the receiving device can handle 
		= Session Multiplexing
			@ allows multiple message streams or sessions onto one logical link
	* UDP (User Datagram Protocol)
		= does not provide reliability
		= if packets are dropped then they are lost, packets are not retransmitted
		= lightweight, not as much overhead as TCP 
		= Used for things such as Live TV, VoIP (Voice over IP), etc.
		
Layer 3 - Network Layer:
	* Data Delivery
		= Routes data packets 
	* Layer 3 switches
		= have router capabilities 
		= uses protocols to select best path to deliver data 
			@ OSPF (Open Shortest Path First)
			@ BGP (Border Gateway Protocol)
			@ IS-IS (Intermediate System to Intermediate System)
		= Path determination and logical addressing
	* IP protocols
		= IPv4
		= IPv6
	* Criteria for data delivery 
		= cost 
		= hop count 
		= bandwidth
			@ OSPF 
		= longest match of network address
	* Not concerned with reliability, leaves that to higher level protocols such as TCP in Layer 4

Layer 2 - Data Link Layer:
	* Access to media 
		= defines how data is formatted for transmission
		= defines how access to the network in controlled
		= provides Error detection that occurs at physical layer 
	* Ethernet
		= MAC Address (Media Access Control)
			@ MAC Address is used as the identifier of a device 
			@ 48 bits in length, 6 two-digit hexadecimal numbers, e.g. D8-CB-B8-1F-D7-63
			@ Broken into 2 parts 
				- Organization Unique Identifier (OUI)
				- Unique Portion
			@ Manufactured into a Network Card or NIC
		= Formatted according to rules of ethernet 
		= may traverse WAN Link that uses PPP (Point to Point Protocol)

Layer 1 - Physical Layer:
	* Binary Transmission
		= states represented by 0 or 1 

Encapsulation and De-Encapsulation:
	* User Data goes through a stairlike process when it is transmitted 
		= User sends data, it is then encapsulated by going through each layer header: L7 -> L6 -> L5 -> ... -> L1
		= Data gets to receiving end and is then de-encapsulated: L1 -> L2 -> ... -> L6 -> L7

Peer to Peer Communication	
	* Each layer in the OSI model only communicates with the equivalent layer.
	PC 1					  Data Type					PC 2
	___________________________________________________________________
	Application Layer _______________________________ Application Layer
	Presentation Layer ______________________________ Presentation Layer 
	Session Layer ___________________________________ Session Layer 
	Transport Layer _________Segments________________ Transport Layer 
	Network Layer ___________Packets_________________ Network Layer 
	Data Link Layer __________Frames_________________ Data Link Layer 
	Physical Layer ____________Bits__________________ Physical Layer 

Host Communication
	* Computer A may send different types of data in no specific order to computer B. 
		@ Computer A -> 3 Packets of TFTP, 2 Packets of Telnet, 5 Packets of TFTP -> Computer B 
		  Computer B may be running serveral several Layer 3 protocols (IPv4, IPv6)
		  How does computer B know if the traffic arriving at Layer 2 is IPv4 or IPv6?
		  	= The ethernet data has a type field, the NIC reads the type field and informs other layers of the type of data (IPv4 or IPv6) 

TCP/IP Model V.S. OSI Model 
OSI Model what not designed for TCP/IP so there is a simplified version of the OSI model called the TCP/IP model 

TCP/IP Model:
	Layer 4 - Application 
	Layer 3 - Transport 
	Layer 2 - Internet 
	Layer 1 - Network Access
=========================================================================================
##################################### Section 6 - Hexadecimal #####################################
Hexadecimal:
	* 0-F, where F is equivalent to 15 in decimal

Converting Decimal to Hexadecimal
	1. convert the decimal number to binary
	2. Split the binary number into segments of 4. This is because 4 binary numbers can be equal up to 15 which is the highest hexadecimal number
	3. Convert to Hexadecimal
	Example:
		128
		10000000
		1000 | 0000  (equivalent to 8 | 0 in hexadecimal)
		80

		Hence, 120 in hexadecimal is 80

Converting Hexadecimal to Decimal
	1. Convert each digit of hexadecimal to 4 digits of binary
	2. Convert the binary to decimal 
	Example:
		3A
		0011 | 1010
		00111010
		58

################################## Section 7 - IP Addressing #########################################